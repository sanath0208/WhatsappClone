{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","InsertEmoticon","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25290615.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBC_25qAm7U_I_hCAwb0CBo2EAYQzkWs0A\",\r\n    authDomain: \"whatsapp-clone-8cd3c.firebaseapp.com\",\r\n    projectId: \"whatsapp-clone-8cd3c\",\r\n    storageBucket: \"whatsapp-clone-8cd3c.appspot.com\",\r\n    messagingSenderId: \"1059954463925\",\r\n    appId: \"1:1059954463925:web:9f07f89614105192581afc\",\r\n    measurementId: \"G-SMTN8RW0F2\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore(); \r\nconst auth = firebaseApp.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth,provider};\r\nexport default db;","import React, {useEffect, useState} from 'react';\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport './SidebarChat.css';\r\nimport db from './firebase';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction SidebarChat({id,name,addNewChat}) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, []);\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please Enter Name for Chat\");\r\n\r\n        if(roomName){\r\n            db.collection(\"rooms\").add({\r\n                name: roomName\r\n            })\r\n        }\r\n    };\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`} key={id}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"sidebarChat_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{messages[0]?.message}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n        \r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat\">\r\n            <h3 className=\"add-new-chat-title\">Add New Chat</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat","import React, {createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, {useState, useEffect} from 'react'\r\nimport './Sidebar.css'\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(() => {\r\n        db.collection('rooms').onSnapshot(snapshot =>(setRooms(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n        })))))\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n                <Avatar src={user?.photoURL}/>\r\n                <div className=\"sidebar_headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"sidebar_headerLeft\">\r\n                \r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or start new chat\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room => (\r\n                    <SidebarChat key={room.id} id ={room.id} name={room.data.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport React, {useState, useEffect} from 'react';\r\nimport './Chat.css';\r\nimport {AttachFile, InsertEmoticon, MoreVert, SearchOutlined} from '@material-ui/icons';\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport db from './firebase'\r\nimport { useStateValue } from './StateProvider';\r\nimport firebase from 'firebase';\r\n\r\nfunction Chat() {\r\n\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [messages, setMessages] = useState([]);\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name);\r\n            });\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            });\r\n\r\n        }\r\n    },[roomId])\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => (\r\n                setRoomName(snapshot.data().name)\r\n            ));\r\n        db.collection('rooms').doc(roomId).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot(snapshot => (\r\n            setMessages(snapshot.docs.map(doc => doc.data()))\r\n        ));\r\n        }\r\n    }, [roomId]);\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random()*5000));\r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) =>{\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n        \r\n            <div className = \"chat_header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"chat_headerInfo\">\r\n                <h3 className='chat-room-name'>{roomName}</h3>\r\n                <p className='chat-room-last-seen'>\r\n                        Last seen {\" \"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.\r\n                            timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat_headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat_body\">\r\n                {messages.map(message => (\r\n                    <p className={`chat_message ${ message.name == user.displayName && 'chat_receiver'}`}>\r\n                        <span className=\"chat_name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat_timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                    </p>\r\n                ))}\r\n\r\n            </div>\r\n\r\n            <div className=\"chat_footer\">\r\n                <InsertEmoticon />\r\n                <form>\r\n                    <input value={input} onChange = {(e) => setInput(e.target.value)} type=\"text\" />\r\n                    <button onClick={sendMessage} type=\"submit\">Send a Message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport \"./Login.css\";\r\nimport { Button } from '@material-ui/core';\r\nimport {auth, provider} from \"./firebase\";\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n\r\n    const[{}, dispatch] = useStateValue();\r\n    const signIn = () => {\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message));\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n            <div className=\"login_text\">\r\n                <h1>Sign in to Whatsapp</h1>\r\n            </div>\r\n            <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import './App.css';\r\nimport Sidebar from './Sidebar';\r\nimport Chat from './Chat';\r\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport Login from './Login'\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction App() {\r\n\r\n  const [{user}, setUser] = useStateValue();\r\n  return (\r\n    <div className=\"app\">\r\n      {!user ? (<Login />) : \r\n      (\r\n      <div className='app_body'>\r\n      <Router>\r\n        <Sidebar />\r\n        <Switch>\r\n          <Route path=\"/rooms/:roomId\">\r\n            <Chat />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      </div> )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}